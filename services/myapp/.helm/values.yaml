# Default values for myapp.
replicaCount: 1

image:
  repository: myapp
  pullPolicy: Never
  tag: "v1"

imagePullSecrets: []
nameOverride: "myapp"
fullnameOverride: "myapp"

serviceAccount:
  create: false
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  port: 4000

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: myapp.local
      paths:
        - path: /
          pathType: Prefix
  tls: []

resources: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Health check configuration
healthCheck:
  enabled: true
  path: "/myapp/v1/api"
  initialDelaySeconds: 30
  periodSeconds: 10

# Oathkeeper access rules configuration
oathkeeper:
  enabled: true
  rules:
    api:
      enabled: true
      name: "myapp-api-rule"
      urlPattern: "<https|http>://<.*>/myapp/v1<.*>"
      methods: ["GET", "POST", "PUT", "PATCH", "DELETE"]
      authenticator:
        handler: bearer_token
        config:
          check_session_url: "http://auth-server:3000/sessions/whoami"
          preserve_query: true
          preserve_path: true
          extra_from: "@this"
          subject_from: "subject"
          forward_http_headers: ["Authorization"]
      authorizer:
        handler: allow
      mutator:
        handler: header
        config:
          headers:
            X-User: "{{ print .Subject }}"
            X-User-ID: "{{ print .Extra.sub }}"
    health:
      enabled: true
      name: "myapp-health-rule"
      urlPattern: "<https|http>://<.*>/myapp/health<.*>"
      methods: ["GET"]
      authenticator:
        handler: anonymous
      authorizer:
        handler: allow
      mutator:
        handler: noop
