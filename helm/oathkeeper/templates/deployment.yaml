apiVersion: apps/v1
kind: Deployment
metadata:
  name: oathkeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oathkeeper
  template:
    metadata:
      labels:
        app: oathkeeper
    spec:
      containers:
      - name: oathkeeper
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        args:
          - serve
          - proxy
          - -c
          - /etc/config/oathkeeper/oathkeeper.yml
        env:
        - name: LOG_LEVEL
          value: {{ .Values.config.logLevel }}
        ports:
        - containerPort: 4455
        - containerPort: 4456
        volumeMounts:
        - name: oathkeeper-config
          mountPath: /etc/config/oathkeeper
          readOnly: true
        - name: oathkeeper-rules
          mountPath: /etc/config/oathkeeper-rules
          readOnly: true
      volumes:
      - name: oathkeeper-config
        configMap:
          name: oathkeeper-config
      - name: oathkeeper-rules
        configMap:
          name: oathkeeper-rules
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oathkeeper-maester
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oathkeeper-maester
  template:
    metadata:
      labels:
        app: oathkeeper-maester
    spec:
      serviceAccountName: oathkeeper-maester
      containers:
      - name: manager
        image: "{{ .Values.maesterImage.repository }}:{{ .Values.maesterImage.tag }}"
        command:
        - /manager
        args:
        - --metrics-addr=0.0.0.0:8080
        # - --enable-leader-election
        - controller
        - --rulesConfigmapNamespace=default
        - --rulesConfigmapName=oathkeeper-rules
        - --rulesFileName=oathkeeper-rules.yml
        env:
        - name: WATCH_NAMESPACE
          value: ""
        - name: LEADER_ELECTION_ID
          value: "oathkeeper-maester"
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
